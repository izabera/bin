#!/bin/bash

# tree
# options:
# -L   max level
# -f   show full path
# -F   append symbols like ls -F
# -o   write output to file
# -d   directories only

tree () {
  ! cd -- "$1" && exit
  prestring=$2
  [[ $prestring = *"|" ]] && prestring+="-- " || prestring+="   "
  "$onlydirs" && files=(*/) || files=(*)
  (( ! ${#files[@]} )) && exit

  for file in "${files[@]::${#files[@]}-1}"; do

    printf "%s%s" "$prestring" "${fullpath:+$PWD/}${file%/}"

    # avoid a function
    # it's simpler than checking FUNCNEST, incrementing it and decrementing it afterwards
    if [[ -L ${file%/} ]]; then
      "$appendsymbol" && printf "@"
      echo link >&4
    elif [[ -d $file ]]; then
      "$appendsymbol" && printf "/"
      echo dir >&4
    elif [[ -S $file ]]; then
      "$appendsymbol" && printf "="
      echo sock >&4
    elif [[ -p $file ]]; then
      "$appendsymbol" && printf "|"
      echo fifo >&4
    elif [[ -f $file ]]; then
      echo file >&4
      if [[ -x $file ]]; then
        "$appendsymbol" && printf "*"
      fi
    elif [[ -b $file ]]; then
      echo blk >&4
    elif [[ -c $file ]]; then
      echo char >&4
    fi

    echo
    [[ -d $file && ! -L ${file%/} ]] && ( tree "${file%/}" "${prestring%-- }   |" )
  done

  file=${files[-1]}

  printf "%s%s" "${prestring%?-- }\`-- " "${fullpath:+$PWD/}${file%/}"

  if [[ -L ${file%/} ]]; then
    "$appendsymbol" && printf "@"
    echo link >&4
  elif [[ -d $file ]]; then
    "$appendsymbol" && printf "/"
    echo dir >&4
  elif [[ -S $file ]]; then
    "$appendsymbol" && printf "="
    echo sock >&4
  elif [[ -p $file ]]; then
    "$appendsymbol" && printf "|"
    echo fifo >&4
  elif [[ -f $file ]]; then
    echo file >&4
    if [[ -x $file ]]; then
      "$appendsymbol" && printf "*"
    fi
  elif [[ -b $file ]]; then
    echo blk >&4
  elif [[ -c $file ]]; then
    echo char >&4
  fi

  echo
  [[ -d $file && ! -L ${file%/} ]] && ( tree "${file%/}" "${prestring%?-- }    |" )
}

onlydirs=false fullpath= appendsymbol=false
while getopts :adfFL:o: opt; do
  case $opt in
    a) shopt -s dotglob ;;
    d) onlydirs=true ;;
    f) fullpath=x ;;
    F) appendsymbol=true ;;
    L) FUNCNEST=$OPTARG ;;
    o) exec 1>"$OPTARG" || exit ;;
    :) echo "Missing argument for -$OPTARG" >&2; exit 1 ;;
    *) echo "Unknown option -$OPTARG" >&2; exit 1 ;;
  esac
done

exec 3>&1

coproc {
  declare -i dircount filecount sockcount fifocount charcount blkcount linkcount
  while read -r; do
    case $REPLY in
      dir) dircount+=1 ;;
      file) filecount+=1 ;;
      fifo) fifocount+=1 ;;
      sock) sockcount+=1 ;;
      char) charcount+=1 ;;
      blk) blkcount+=1 ;;
      link) linkcount+=1 ;;
      output)
        (( dircount )) && echo "Directories: $dircount"
        (( filecount )) && echo "Files: $filecount"
        (( fifocount )) && echo "Named pipes: $fifocount"
        (( sockcount )) && echo "Sockets: $sockcount"
        (( blkcount )) && echo "Block devices: $blkcount"
        (( charcount )) && echo "Character devices: $charcount"
        (( linkcount )) && echo "Symlinks: $linkcount"
        exit
    esac
  done >&3
}

exec 4>&"${COPROC[1]}"

exec 2>/dev/null
shopt -s nullglob

shift "$((OPTIND - 1))"
(( $# )) || set .
for dir do
  printf "%s\n" "$dir"
  tree "$dir" "|"
done
echo output >&"${COPROC[1]}"
wait
